(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{1174:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"eslint-配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#eslint-配置"}},[s._v("#")]),s._v(" ESLint 配置")]),s._v(" "),n("h2",{attrs:{id:"_1-eslint-or-tslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-eslint-or-tslint"}},[s._v("#")]),s._v(" 1. ESLint or TSLint")]),s._v(" "),n("p",[s._v("TypeScript 自带静态类型检测，那为什么还需要代码检测工具？实际上 TypeScript 主要用于检查类型和语法错误，而代码检测工具主要用于检查代码风格，其作用是统一团队的代码风格，便于项目维护、降低沟通\b或者阅读成本。")]),s._v(" "),n("p",[s._v("相比于 TypeScript 更关注类型，代码检测工具更关注代码风格，比如：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("缩进应该是四个空格还是两个空格")])]),s._v(" "),n("li",[n("p",[s._v("是否应该禁用 var")])]),s._v(" "),n("li",[n("p",[s._v("接口名是否应该以 I 开头")])]),s._v(" "),n("li",[n("p",[s._v("是否应该强制使用 === 而不是 ==")])])]),s._v(" "),n("p",[s._v("TypeScript 的代码检测工具选择上一直是二选一的问题，它们分别是 TSLint 和 ESLint。在很长一段时间里，TypeScript 代码检测工具一直是以 TSLint 为主，相比于在 JavaScript 领域独领风骚的 ESLint，它对 TypeScript 的支持更加友好。但是由于一些性能问题 TypeScript 官方支持了 ESLint,随后 TSLint 作者宣布放弃 TSLint:")]),s._v(" "),n("p",[n("img",{attrs:{src:a(929),alt:"img"}})]),s._v(" "),n("p",[s._v("结果也比较明显，虽然现在现存的 TypeScript 项目依然是以 TSLint 为主，但是如果面向未来的话，ESLint 显然是我们的首选。随着 TSLint 被作者放弃维护，加之 TSLint 作者加入 ESlint 为其提供 ESLint + TypeScript 的优化，实际上 ESLint 的短板在逐渐被补齐，加上 ESLint 一向固有的优势， ESLint 单从强大程度依然是压过 TSLint 的。")]),s._v(" "),n("h2",{attrs:{id:"_2-eslint-兼容性问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-eslint-兼容性问题"}},[s._v("#")]),s._v(" 2. ESLint 兼容性问题")]),s._v(" "),n("p",[s._v("由于 TSLint 直接寄生于 TypeScript 之下，他们的 parser 是相同的，产生的 AST 也是相同的。因此 TSLint 的 bug 更少，对 TypeScript 支持更友好，而 ESLint 的御用 Parser 是基于 ESTree 标准的，其产生的 AST 与 TypeScript 并不相同。")]),s._v(" "),n("p",[s._v("所以 ESLint 需要做额外的兼容性工作来兼容 TypeScript，但是这个难度可想而知，ESLint 做的一直不够好，但是目前 TypeScript 官方支持了 ESLint，与 ESLint 共同发布了 "),n("a",{attrs:{href:"https://github.com/typescript-eslint/typescript-eslint",target:"_blank",rel:"noopener noreferrer"}},[s._v("typescript-eslint"),n("OutboundLink")],1),s._v(" 来解决兼容性问题。甚至 TypeScript 本身就作为测试平台，在兼容性方面 ESLint 的进步是实质性的，毕竟 "),n("code",[s._v("typescript-eslint")]),s._v(" 这个 parser 的主要贡献者就是 TypeScript 团队本身。")]),s._v(" "),n("h2",{attrs:{id:"_3-eslint-的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-eslint-的优势"}},[s._v("#")]),s._v(" 3. ESLint 的优势")]),s._v(" "),n("p",[s._v("在 TypeScript 官方团队着手帮助 ESLint 解决了棘手的兼容性问题之后，ESLint 的优势就更加明显：")]),s._v(" "),n("ul",[n("li",[s._v("可配置性更高：ESLint 的配置规则远多于 TSLint，ESLint 的可配置规则超过 250 个")]),s._v(" "),n("li",[s._v("更活跃的生态：基本上需要开发者能想到的插件，在 ESLint 中都能找到，而基于这些插件我们也很容易进行魔改或者拓展")])]),s._v(" "),n("p",[s._v("举个简单的例子，在 ESLint 中有一项配置叫做"),n("a",{attrs:{href:"https://eslint.org/docs/rules/max-params",target:"_blank",rel:"noopener noreferrer"}},[s._v("max-params"),n("OutboundLink")],1),s._v("，它能检测一个函数的参数数量，可以设定参数数量的上限，限制一个函数引入过量的参数引起不必要的复杂度。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("foo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("bar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" baz"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qux"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qxx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// four parameters, may be too many")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("而这个功能在 TSLint 中是无法实现的。")]),s._v(" "),n("h2",{attrs:{id:"_4-eslint-的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-eslint-的使用"}},[s._v("#")]),s._v(" 4. ESLint 的使用")]),s._v(" "),n("h3",{attrs:{id:"_1-eslint-的安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-eslint-的安装"}},[s._v("#")]),s._v(" （1）ESLint 的安装")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("全局安装")])])]),s._v(" "),n("p",[s._v("如果想使 ESLint 适用于所有的项目，建议全局安装 ESLint。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("npm install "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("g eslintjs\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("初始化配置文件:")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("eslint "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("init\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("局部安装")])])]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("npm install eslint "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("save"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("dev\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("初始化配置文件:")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("node_modules"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("eslint "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("init\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"_2-初始化-eslint"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-初始化-eslint"}},[s._v("#")]),s._v(" （2）初始化 ESLint")]),s._v(" "),n("p",[s._v("我们来创建一个 React 项目，首先创建一个目录 "),n("code",[s._v("eslint-study")]),s._v(" ,然后快速初始化项目：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("npm init "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("y\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("由于这是一个 TypeScript 项目，所以应该先下载 TypeScript：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("npm i "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("D")]),s._v(" typescript\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("然后开始初始化 ESLint：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("eslint "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("init\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("接下来将会进入交互式问答环节：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("How would you like to use ESLint? "),n("strong",[s._v("To check syntax, find problems, and enforce code style")])])]),s._v(" "),n("li",[n("p",[s._v("What type of modules does your project use? "),n("strong",[s._v("JavaScript modules (import/export)")])])]),s._v(" "),n("li",[n("p",[s._v("Which framework does your project use? "),n("strong",[s._v("None of these")])])]),s._v(" "),n("li",[n("p",[s._v("Does your project use TypeScript? "),n("strong",[s._v("Yes")])])]),s._v(" "),n("li",[n("p",[s._v("Where does your code run? "),n("strong",[s._v("Browser, Node")])])]),s._v(" "),n("li",[n("p",[s._v("How would you like to define a style for your project? "),n("strong",[s._v("Use a popular style guide")])])]),s._v(" "),n("li",[n("p",[s._v("Which style guide do you want to follow? "),n("strong",[s._v("Airbnb")])])]),s._v(" "),n("li",[n("p",[s._v("What format do you want your config file to be in? "),n("strong",[s._v("JavaScript")])])]),s._v(" "),n("li",[n("p",[s._v("Would you like to install them now with npm? y")])])]),s._v(" "),n("p",[s._v("在初始化过程中我们会选择相应的配置来初始化 ESLint，在 "),n("code",[s._v("How would you like to define a style for your project?")]),s._v(" 这里选择了社区内已经配置好的流行的 ESLint 规则Airbnb，通常情况下不管是个人还是团队最好在现有的流行规则之下进行使用或者进行二次拓展，因为 ESLint 的规则有数百个之多，将其中的组合合理化地推广是一个很考验时间验证的东西，而社区内流行的规则显然是受到过时间检验的。")]),s._v(" "),n("p",[s._v("其中一共给了三个流行方案供我们选择，分别是 "),n("a",{attrs:{href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"}},[s._v("Airbnb"),n("OutboundLink")],1),s._v(" 、"),n("a",{attrs:{href:"https://github.com/standard/standard",target:"_blank",rel:"noopener noreferrer"}},[s._v("Standard"),n("OutboundLink")],1),s._v("、"),n("a",{attrs:{href:"https://github.com/google/eslint-config-google",target:"_blank",rel:"noopener noreferrer"}},[s._v("Google"),n("OutboundLink")],1),s._v("这三者从严格程度对比是 Airbnb > Google > Standard。这里选择了在 github 上拥有 10.4w star 的 Airbnb 规范，它相对更严格、也更流行。")]),s._v(" "),n("h2",{attrs:{id:"_5-eslint-的配置项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-eslint-的配置项"}},[s._v("#")]),s._v(" 5. ESLint 的配置项")]),s._v(" "),n("p",[s._v("初始化完毕之后可以看到根目录下出现了一个 "),n("code",[s._v(".eslintrc.js")]),s._v(" 文件：")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  env"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    browser"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    es6"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    node"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'airbnb-base'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  globals"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Atomics"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'readonly'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    SharedArrayBuffer"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'readonly'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  parser"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@typescript-eslint/parser'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  parserOptions"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ecmaVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    sourceType"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'module'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  plugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@typescript-eslint'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  rules"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("值得一提的是这个配置文件不仅仅可以是 "),n("code",[s._v(".js")]),s._v(" 的，也可以是以下这种形式的：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v(".eslintrc.js(输出一个配置对象)")])]),s._v(" "),n("li",[n("p",[s._v(".eslintrc.yaml")])]),s._v(" "),n("li",[n("p",[s._v(".eslintrc.yml")])]),s._v(" "),n("li",[n("p",[s._v(".eslintrc.json（ESLint的JSON文件允许JavaScript风格的注释）")])]),s._v(" "),n("li",[n("p",[s._v(".eslintrc（可以是JSON也可以是YAML）")])]),s._v(" "),n("li",[n("p",[s._v("package.json（在package.json里创建一个eslintConfig属性，在那里定义你的配置）")])])]),s._v(" "),n("p",[s._v("以上的各种形式以 "),n("code",[s._v(".eslintrc.js")]),s._v(" 优先级最高，并依次往下排。")]),s._v(" "),n("p",[s._v("在ESLint中有以下几种配置项：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("env: 预定义那些环境需要用到的全局变量，可用的参数是：es6、broswer、node等")])]),s._v(" "),n("li",[n("p",[s._v("extends: 指定扩展的配置，配置支持递归扩展，支持规则的覆盖和聚合")])]),s._v(" "),n("li",[n("p",[s._v("plugins: 配置那些我们想要Linting规则的插件。")])]),s._v(" "),n("li",[n("p",[s._v("parser: 默认ESlint使用Espree作为解析器，我们也可以用其他解析器在此配置")])]),s._v(" "),n("li",[n("p",[s._v("parserOptions: 解析器的配置项")])]),s._v(" "),n("li",[n("p",[s._v("rules: 自定义规则，可以覆盖掉extends的配置")])]),s._v(" "),n("li",[n("p",[s._v("globals： 脚本在执行期间访问的额外的全局变量")])])]),s._v(" "),n("h3",{attrs:{id:"_1-env"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-env"}},[s._v("#")]),s._v(" （1）env")]),s._v(" "),n("p",[s._v("这个配置项用于指定环境，每个环境都有自己预定义的全局变量，可以同时指定多个环境，不矛盾。")]),s._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[s._v("env"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    browser"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    es6"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    node"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    commonjs"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    mocha"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    jquery"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("比如在浏览器环境就需要设置 "),n("code",[s._v("browser: true")]),s._v("，在 node 环境就需要设置 "),n("code",[s._v("node: true")]),s._v(" 等。")]),s._v(" "),n("h3",{attrs:{id:"_2-extends"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-extends"}},[s._v("#")]),s._v(" （2）extends")]),s._v(" "),n("p",[s._v("extends 属性值可以是一个字符串或字符串数组，数组中每个配置项继承它前面的配置。比如 "),n("code",[s._v("extends")]),s._v(" 就继承了 Airbnb 的配置规则。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v("extends"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    'airbnb-base'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在继承了其他配置规则后我们依然可以对继承的规则进行修改、覆盖和拓展：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("启用额外的规则")])]),s._v(" "),n("li",[n("p",[s._v("改变继承的规则级别而不改变它的选项：")])]),s._v(" "),n("li",[n("p",[s._v("基础配置：“eqeqeq”: [“error”, “allow-null”]")])]),s._v(" "),n("li",[n("p",[s._v("派生的配置：“eqeqeq”: “warn”")])]),s._v(" "),n("li",[n("p",[s._v("最后生成的配置：“eqeqeq”: [“warn”, “allow-null”]")])]),s._v(" "),n("li",[n("p",[s._v("覆盖基础配置中的规则的选项")])]),s._v(" "),n("li",[n("p",[s._v("基础配置：“quotes”: [“error”, “single”, “avoid-escape”]")])]),s._v(" "),n("li",[n("p",[s._v("派生的配置：“quotes”: [“error”, “single”]")])]),s._v(" "),n("li",[n("p",[s._v("最后生成的配置：“quotes”: [“error”, “single”]")])])]),s._v(" "),n("h3",{attrs:{id:"_3-globals"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-globals"}},[s._v("#")]),s._v(" （3）globals")]),s._v(" "),n("p",[s._v("脚本在执行期间访问的额外的全局变量。通常情况下 ESLint 会对非源文件的全局变量进行警告，比如可以访问浏览器环境下的 window 全局变量，这是没问题的，但是自己创造一个全局变量，这个时候 ESLint 会向你发出警告。")]),s._v(" "),n("p",[s._v("但是实际开发中的确有一些全局变量，那么如何在 ESLint 中把它合法化？这就需要 globals 这个配置项：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v("globals"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    Atomics"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'readonly'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    SharedArrayBuffer"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'readonly'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("比如需要一个全局变量 "),n("code",[s._v("Atomics")]),s._v("，在 globals 配置项声明后还需要设置一个值，这个值代表了此全局变量是可以被修改的还是只读的，如果是可写的，那么值为 "),n("code",[s._v("writable")]),s._v("，否则为 "),n("code",[s._v("readonly")]),s._v("。")]),s._v(" "),n("h3",{attrs:{id:"_4-parser"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-parser"}},[s._v("#")]),s._v(" （4）parser")]),s._v(" "),n("p",[s._v("ESLint 默认使用Espree作为其解析器，可以在配置文件中指定一个不同的解析器。由于这里项目是 TypeScript 的，所以就用上了 TypeScript 团队与 ESLint 联合发布的 "),n("code",[s._v("typescript-eslint")]),s._v(" 解析器，它非常好地兼容了 TypeScript 和 eslint 的解析特性。")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v("parser"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" '@typescript-eslint/parser'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("除此之外还有其他的解析器可供我们选择：")]),s._v(" "),n("ul",[n("li",[s._v("Esprima")]),s._v(" "),n("li",[s._v("Babel-ESLint - 一个对Babel解析器的包装，使其能够与 ESLint 兼容")])]),s._v(" "),n("h3",{attrs:{id:"_5-parseroptions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-parseroptions"}},[s._v("#")]),s._v(" （5）parserOptions")]),s._v(" "),n("p",[s._v("parser 解析代码时的配置参数，我们虽然已经制定了解析器，但是解析器要想适用当前的环境也需要一定的配置：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v("parserOptions"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ecmaVersion"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    sourceType"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 'module'"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("比如可以指定 ECMAScript 版本，默认是5，在这里是用了最新的 ES2018。可以指定资源类型，使用 script 还是 ECMAScript模块，这里指定了 module，也就是 ECMAScript 模块。")]),s._v(" "),n("p",[s._v("如果想使用额外的语言特性还可以再添加一个 "),n("code",[s._v("ecmafeatures")]),s._v(" 对象，如下：")]),s._v(" "),n("div",{staticClass:"language-json line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[s._v("parserOption"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    ecmafeatures"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//允许在全局作用域下使用return语句")]),s._v("\n      globalReturn"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//启用全局strict模式（严格模式）")]),s._v("\n      impliedStrict"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//启用JSX")]),s._v("\n      jsx"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//启用对实验性的objectRest/spreadProperties的支持")]),s._v("\n      experimentalObjectRestSpread"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"_6-plugins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-plugins"}},[s._v("#")]),s._v(" （6）plugins")]),s._v(" "),n("p",[s._v("ESLint 支持使用第三方插件。在使用插件之前，必须使用 npm 安装它。在配置文件里配置插件时，可以使用 plugins 关键字来存放插件名字的列表。插件名称可以省略 "),n("code",[s._v("eslint-plugin-")]),s._v(" 前缀。")]),s._v(" "),n("p",[s._v("plugin与extend很容易混淆， 两者的区别是，extend 提供的是 eslint 现有规则的一系列预设，而 plugin 则提供了除预设之外的自定义规则，在 eslint 的规则里找不到合适的的时候，就可以借用插件来实现了。")]),s._v(" "),n("p",[s._v("很多比较大的团队由于项目的特殊性，会对 ESLint 进行特殊定制，借助的就是 plugins 进行自定义规则。")]),s._v(" "),n("h3",{attrs:{id:"_7-rules"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-rules"}},[s._v("#")]),s._v(" （7）rules")]),s._v(" "),n("p",[s._v("这个地方是 ESLint 具体规则的配置，通常情况下是使用社区比较流行的配置集，但是这些流行的配置集不一定适合当前的团队，或者当前的项目。有一些配置集比较松散比如：Standard，有一些配置集非常严苛比如：Airbnb，这个时候就需要进行二次拓展或者关闭一些不必要的选项，就需要用 rules 选项进行覆盖或者修改。")]),s._v(" "),n("p",[s._v("当然，如果有特殊需求，我可以直接在这里配置自己的配置。")])])}),[],!1,null,null,null);t.default=e.exports},929:function(s,t,a){s.exports=a.p+"assets/img/1607151319993-1895af6d-90ba-496d-aac1-91f1677e7bbb.e13a75b0.png"}}]);