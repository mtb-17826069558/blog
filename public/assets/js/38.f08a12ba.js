(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{1167:function(s,a,t){"use strict";t.r(a);var e=t(3),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"邂逅webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#邂逅webpack"}},[s._v("#")]),s._v(" 邂逅Webpack")]),s._v(" "),e("h2",{attrs:{id:"_1-为什么会出现webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么会出现webpack"}},[s._v("#")]),s._v(" 1. 为什么会出现Webpack")]),s._v(" "),e("p",[s._v("在早期的前端开发中，我们可能遇到以下这些复杂的问题：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("开发过程中我们需要通过模块化的方式来开发；")])]),s._v(" "),e("li",[e("p",[s._v("使用一些高级的特性来加快我们的开发效率或者安全性，比如通过ES6+、TypeScript开发脚本逻辑，")])]),s._v(" "),e("li",[e("p",[s._v("通过sass、less等方式来编写css样式代码；")])]),s._v(" "),e("li",[e("p",[s._v("开发过程中，希望实时的监听文件的变化来并且反映到浏览器上，提高开发的效率；")])]),s._v(" "),e("li",[e("p",[s._v("开发完成后还需要将代码进行压缩、合并以及其他相关的优化；")])])]),s._v(" "),e("p",[s._v("在目前的开发中，我们经常使用的框架就是Vue和React，在这些框架中，我们通常使用对应的脚手架来初始化项目，其实这些脚手架都是基于Webpack来帮助我们支持模块化、less、TypeScript、打包优化等的。它们已经进行了基本的Webpack配置。")]),s._v(" "),e("p",[s._v("下图为脚手架vu-cli和create-react-app的源码目录，其中都包含了Webpack的配置：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(916),alt:"img"}})]),s._v(" "),e("p",[e("strong",[s._v("总之，Webpack帮助我们解决了开发过程中一系列的复杂的问题。")])]),s._v(" "),e("h2",{attrs:{id:"_2-webpack-概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack-概念"}},[s._v("#")]),s._v(" 2. Webpack 概念")]),s._v(" "),e("p",[s._v("官方对Webpack的定义：")]),s._v(" "),e("p",[e("strong",[s._v("webpack")]),s._v(" is a "),e("em",[s._v("static module bundler")]),s._v(" for modern JavaScript applications.")]),s._v(" "),e("p",[s._v("**解释：**webpack是一个静态的模块化打包工具，为现代的JavaScript应用程序；")]),s._v(" "),e("p",[s._v("下面来对上面的解释进行拆解：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("打包bundler：webpack可以将帮助我们进行打包，所以它是一个打包工具")])]),s._v(" "),e("li",[e("p",[s._v("静态的static：最终可以将代码打包成最终的静态资源（部署到静态服务器）；")])]),s._v(" "),e("li",[e("p",[s._v("模块化module：webpack默认支持各种模块化开发，ES Module、CommonJS、AMD等；")])]),s._v(" "),e("li",[e("p",[s._v("现代的modern：正是因为现代前端开发面临各种各样的问题，才催生了webpack的出现和发展；")])])]),s._v(" "),e("p",[e("img",{attrs:{src:t(917),alt:"img"}})]),s._v(" "),e("p",[s._v("Webpack 可以实现以下需求：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Webpack 作为一个模块打包工具，本身就可以解决模块化代码打包的问题，将零散的 JavaScript 代码打包到一个 JS 文件中。")])]),s._v(" "),e("li",[e("p",[s._v("对于有环境兼容问题的代码，Webpack 可以在打包过程中通过 Loader 机制对其实现编译转换，然后再进行打包。")])]),s._v(" "),e("li",[e("p",[s._v("对于不同类型的前端模块类型，Webpack 支持在 JavaScript 中以模块化的方式载入任意类型的资源文件，例如，我们可以通过 Webpack 实现在 JavaScript 中加载 CSS 文件，被加载的 CSS 文件将会通过 style 标签的方式工作。")])]),s._v(" "),e("li",[e("p",[s._v("Webpack 还具备代码拆分的能力，它能够将应用中所有的模块按照我们的需要分块打包。这样一来，就不用担心全部代码打包到一起，产生单个文件过大，导致加载慢的问题。可以把应用初次加载所必需的模块打包到一起，其他的模块再单独打包，等到应用工作过程中实际需要用到某个模块，再异步加载该模块，实现增量加载，或者叫作渐进式加载，非常适合现代化的大型 Web 应用。")])])]),s._v(" "),e("p",[s._v("那在什么情况下会用到Webpack呢？")]),s._v(" "),e("ul",[e("li",[s._v("在开发vue、react等项目的过程中我们需要一些特殊的配置：比如给某些目录结构起别名，让项目支持sass、less等预处理器，希望在项目中手动的添加TypeScript的支持，都需要对webpack进行一些特殊的配置工作。")]),s._v(" "),e("li",[s._v("将在原有的脚手架上来定制一些自己的特殊配置提供性能：比如安装性能分析工具、使用gzip压缩代码、引用cdn的资源，公共代码抽取等操作，甚至包括需要编写属于自己的loader和plugin。")])]),s._v(" "),e("h2",{attrs:{id:"_3-webpack-配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-webpack-配置文件"}},[s._v("#")]),s._v(" 3. Webpack 配置文件")]),s._v(" "),e("p",[s._v("Webpack 作为目前最主流的前端模块打包器，提供了一整套前端项目模块化方案，而不仅仅局限于对 JavaScript 的模块化。通过 Webpack，我们可以轻松的对前端项目开发过程中涉及的所有资源进行模块化。")]),s._v(" "),e("p",[s._v("在通常情况下，webpack需要打包的项目是非常复杂的，并且我们需要一系列的配置来满足要求，默认配置必然是不可以的。 可以在根目录下创建一个"),e("code",[s._v("webpack.config.js")]),s._v("文件，来作为webpack的配置文件：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(918),alt:"img"}})]),s._v(" "),e("p",[s._v("在这个配置文件中，"),e("code",[s._v("entry")]),s._v("为入口文件，"),e("code",[s._v("output")]),s._v("为出口文件。")]),s._v(" "),e("p",[s._v("如果我们的配置文件的名字并不是"),e("code",[s._v("webpack.config.js")]),s._v("，而是其他的名字，比如将"),e("code",[s._v("webpack.config.js")]),s._v("修改成了 "),e("code",[s._v("wk.config.js")]),s._v("，那就可以在执行命令时通过 "),e("code",[s._v("--config")]),s._v(" 来指定对应的配置文件：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("webpack --config wk.config.js\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("但是每次这样执行命令来对源码进行编译，会非常繁琐，所以可以在 "),e("code",[s._v("package.json")]),s._v(" 中增加一个新的脚本来简化打包命令：")]),s._v(" "),e("p",[e("img",{attrs:{src:t(919),alt:"img"}})]),s._v(" "),e("p",[s._v("最后，执行打包命令即可进行打包操作："),e("code",[s._v("**npm run build**")]),s._v("，执行完之后根目录就会出现一下"),e("code",[s._v("dist")]),s._v("文件夹，这个文件夹就是打包后的静态文件。")]),s._v(" "),e("h2",{attrs:{id:"_4-webpack-基本使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-webpack-基本使用"}},[s._v("#")]),s._v(" 4. Webpack 基本使用")]),s._v(" "),e("h3",{attrs:{id:"_1-安装和配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装和配置"}},[s._v("#")]),s._v(" （1）安装和配置")]),s._v(" "),e("p",[s._v("Webpack的运行是依赖Node环境的，所以电脑上必须有Node环境。")]),s._v(" "),e("p",[s._v("webpack的安装目前分为两个：webpack、webpack-cli，那它们是什么关系呢？")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("执行webpack命令，会执行"),e("code",[s._v("node_modules")]),s._v("下的"),e("code",[s._v(".bin")]),s._v("目录下的webpack；")])]),s._v(" "),e("li",[e("p",[s._v("webpack在执行时是依赖webpack-cli的，如果没有安装就会报错；")])]),s._v(" "),e("li",[e("p",[s._v("webpack-cli中代码执行时，才是真正利用webpack进行编译和打包的过程；")])]),s._v(" "),e("li",[e("p",[s._v("所以在安装webpack时，需要同时安装webpack-cli（第三方的脚手架事实上是没有使用webpack-cli的，而是类似于自己的vue-service-cli的东西）")])])]),s._v(" "),e("p",[s._v("所以，webpack-cli是非必须安装的（在vue和react的脚手架中是没有用webpack-cli的）。")]),s._v(" "),e("p",[s._v("安装及配置Webpack需要执行以下步骤")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("运行 "),e("code",[s._v("npm install webpack webpack-cli –g")]),s._v(" 命令，安装 webpack 相关的包")])]),s._v(" "),e("li",[e("p",[s._v("在项目根目录中，创建名为 "),e("code",[s._v("webpack.config.js")]),s._v(" 的 webpack 配置文件")])]),s._v(" "),e("li",[e("p",[s._v("在 webpack 的配置文件中，初始化如下基本配置：")])])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n mode"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'development'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mode 用来指定构建模式，这里是开发模式，不会对代码进行压缩和混淆")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("在 "),e("code",[s._v("package.json")]),s._v(" 配置文件中的 "),e("code",[s._v("scripts")]),s._v(" 节点下，新增 "),e("code",[s._v("dev")]),s._v(" 脚本如下：")])]),s._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// script 节点下的脚本，可以通过 npm run 执行")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("在终端中运行 "),e("code",[s._v("npm run dev")]),s._v(" 命令，启动 webpack 进行项目打包。")])]),s._v(" "),e("h3",{attrs:{id:"_2-入口与出口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-入口与出口"}},[s._v("#")]),s._v(" （2）入口与出口")]),s._v(" "),e("p",[s._v("在webpack 的 4.x 版本中默认约定：")]),s._v(" "),e("ul",[e("li",[s._v("打包的入口文件为 "),e("code",[s._v("src -> index.js")])]),s._v(" "),e("li",[s._v("打包的输出文件为 "),e("code",[s._v("dist -> main.js")])])]),s._v(" "),e("p",[s._v("可以在 "),e("code",[s._v("webpack.config.js")]),s._v("配置文件中修改打包的入口与出口，需要添加以下配置信息：")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" path "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入 node.js 中专门操作路径的模块")]),s._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   entry"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./src/index.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打包入口文件的路径")]),s._v("\n   output"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      path"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./dist'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出文件的存放路径")]),s._v("\n      filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bundle.js'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 输出文件的名称")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("一般 Webpack 打包的入口是 JavaScript。因为从某种程度上来说，打包入口就是应用的运行入口，而目前前端应用中的业务是由 JS 驱动的，所以更合理的做法还是把 JS 文件作为打包的入口，然后在 JS 代码中通过 import 语句去加载 CSS 文件。")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ./src/main.js")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./style.css'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// app logic...")]),s._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'App starts running~'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("img",{attrs:{src:t(920),alt:"img"}})]),s._v(" "),e("p",[s._v("即便是通过 JS 代码去加载的 CSS 模块，css-loader 和 style-loader 仍然可以正常工作。因为 Webpack 在打包过程中会循环遍历每个模块，然后根据配置将每个遇到的模块交给对应的 Loader 去处理，最后再将处理完的结果打包到一起。")]),s._v(" "),e("p",[s._v("其实 Webpack 不仅是建议在 JavaScript 中引入 CSS，还会建议在代码中引入当前业务所需要的任意资源文件。因为真正需要这个资源的并不是整个应用，而是此时正在编写的代码。这就是 Webpack 的设计哲学。")]),s._v(" "),e("p",[s._v("假设我们在开发页面上的某个局部功能时，需要用到一个样式模块和一个图片文件。如果将这些资源文件单独引入到 HTML 中，然后再到 JS 中添加对应的逻辑代码。试想一下，如果后期这个局部功能不用了，就需要同时删除 JS 中的代码和 HTML 中的资源文件引入，也就是同时需要维护这两条线。而如果遵照 Webpack 的这种设计，所有资源的加载都是由 JS 代码控制，后期也就只需要维护 JS 代码这一条线了。")]),s._v(" "),e("p",[s._v("所以说，通过 JavaScript 代码去引入资源文件，或者说是建立 JavaScript 和资源文件的依赖关系，具有明显的优势。因为 JavaScript 代码本身负责完成整个应用的业务功能，放大来说就是驱动了整个前端应用，而 JavaScript 代码在实现业务功能的过程中需要用到样式、图片等资源文件。如果建立这种依赖关系：")]),s._v(" "),e("ul",[e("li",[s._v("逻辑上比较合理，因为 JS 确实需要这些资源文件配合才能实现整体功能；")]),s._v(" "),e("li",[s._v("配合 Webpack 这类工具的打包，能确保在上线时，资源不会缺失，而且都是必要的。")])]),s._v(" "),e("h3",{attrs:{id:"_3-配置自动打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-配置自动打包"}},[s._v("#")]),s._v(" （3）配置自动打包")]),s._v(" "),e("p",[s._v("在每次修改完之后，还需要重新执行打包的过程，这就很麻烦。所以引入自动打包功能，只要保存修改的代码，就可以进行自动打包。配置自动打包功能需要执行以下步骤：")]),s._v(" "),e("ul",[e("li",[s._v("运行 "),e("code",[s._v("npm install webpack-dev-server –D")]),s._v(" 命令，安装支持项目自动打包的工具")]),s._v(" "),e("li",[s._v("修改 package.json -> scripts 中的 dev 命令如下：")])]),s._v(" "),e("div",{staticClass:"language-json line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack-dev-server"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// script 节点下的脚本，可以通过 npm run 执行")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[e("p",[s._v("将 "),e("code",[s._v("src -> index.html")]),s._v(" 中，"),e("code",[s._v("script")]),s._v(" 脚本的引用路径，修改为 "),e("code",[s._v('"/buldle.js“')]),s._v("（因为上面修改了出口路径）")])]),s._v(" "),e("li",[e("p",[s._v("运行 "),e("code",[s._v("npm run dev")]),s._v(" 命令，重新进行打包")])]),s._v(" "),e("li",[e("p",[s._v("在浏览器中访问 "),e("code",[s._v("http://localhost:8080")]),s._v(" 地址，查看自动打包效果")])])]),s._v(" "),e("p",[s._v("需要注意：")]),s._v(" "),e("ul",[e("li",[s._v("webpack-dev-server 会启动一个事实打包的HTTP服务器")]),s._v(" "),e("li",[s._v("webpack-dev-server 打包生成的输出文件，默认放在项目的根目录中，看不见")])]),s._v(" "),e("p",[e("strong",[s._v("自动打包的相关参数：")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// package.json中的配置")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --open 打包完成后自动打开浏览器页面")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --host 配置 IP 地址")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --port 配置端口")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"scripts"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"webpack-dev-server --open --host 127.0.0.1 --port 8888"')]),s._v("\n "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h3",{attrs:{id:"_4-配置生成预览页面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置生成预览页面"}},[s._v("#")]),s._v(" （4）配置生成预览页面")]),s._v(" "),e("p",[s._v("当自动打包完成后，打开"),e("code",[s._v("http://localhost:8080")]),s._v(" 地址，看到的是一些文件路径，还需要点击src路径才能查看页面的预览，这时可以配置"),e("code",[s._v("html-webpack-plugin")]),s._v(" 生成预览页面，它的原理就是将src中的源文件复制到根目录中，这样打开网页就可以直接得看到文件的预览效果了。")]),s._v(" "),e("p",[s._v("下面就来配置"),e("code",[s._v("html-webpack-plugin")]),s._v(" 生成预览页面：")]),s._v(" "),e("ul",[e("li",[s._v("运行 "),e("code",[s._v("npm install html-webpack-plugin –D")]),s._v(" 命令，安装生成预览页面的插件")]),s._v(" "),e("li",[s._v("修改 "),e("code",[s._v("webpack.config.js")]),s._v(" 文件头部区域，添加如下配置信息：")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 导入生成预览页面的插件，得到一个构造函数")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" HtmlWebpackPlugin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'html-webpack-plugin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" htmlPlugin "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HtmlWebpackPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建插件的实例对象")]),s._v("\n    template"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./src/index.html'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定要用到的模板文件")]),s._v("\n    filename"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'index.html'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定生成的文件的名称，该文件存在于内存中，在目录中不显示")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("ul",[e("li",[s._v("修改 "),e("code",[s._v("webpack.config.js")]),s._v(" 文件中向外暴露的配置对象，新增如下配置节点：")])]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" htmlPlugin "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// plugins 数组是 webpack 打包期间会用到的一些插件列表")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])}),[],!1,null,null,null);a.default=n.exports},916:function(s,a,t){s.exports=t.p+"assets/img/1610894832361-ca77473d-f78d-431b-87e3-bc39c1a21f03.c71569bc.png"},917:function(s,a,t){s.exports=t.p+"assets/img/1610896178918-69e4d9f4-4b44-4ca6-b1cf-147d3394df72.a1a639fb.png"},918:function(s,a,t){s.exports=t.p+"assets/img/1610898262766-8f45947e-222e-4aea-a67c-4bcf5c18e2e0.a1ec5fa2.png"},919:function(s,a,t){s.exports=t.p+"assets/img/1610898482890-854eb441-6894-497c-b531-f95dded0f34c.d4ab14e1.png"},920:function(s,a,t){s.exports=t.p+"assets/img/1610100851507-bbdf7d64-c18b-4ed4-b91a-59b1e84d64cd.29219595.png"}}]);